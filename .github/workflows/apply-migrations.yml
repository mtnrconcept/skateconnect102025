name: Apply Supabase Migrations

on:
  workflow_dispatch:
  push:
    paths:
      - "supabase/migrations/**"

jobs:
  migrate:
    runs-on: ubuntu-latest
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }} # requis: postgresql://postgres:<PWD>@db...:5432/postgres?sslmode=require
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}       # optionnel: https://<project-ref>.supabase.co
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }} # optionnel pour le smoke test REST

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: v2.53.6

      - name: Push migrations (DB URL)
        run: |
          if [ -z "${SUPABASE_DB_URL}" ]; then
            echo "‚ùå SUPABASE_DB_URL secret manquant."; exit 1;
          fi
          supabase migration up --db-url "${SUPABASE_DB_URL}"

      - name: Install psql client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client jq

      - name: Notify PostgREST to reload schema
        run: psql "${SUPABASE_DB_URL}" -v ON_ERROR_STOP=1 -c "NOTIFY pgrst, 'reload schema';"

      - name: Sanity check: column spot_ratings.comment exists
        run: |
          psql "${SUPABASE_DB_URL}" -v ON_ERROR_STOP=1 -c "\
            select column_name from information_schema.columns \
            where table_schema='public' and table_name='spot_ratings' and column_name='comment';"

      - name: Smoke test REST (optional)
        if: ${{ env.SUPABASE_URL != '' && env.SUPABASE_ANON_KEY != '' }}
        run: |
          curl -sS "${SUPABASE_URL}/rest/v1/spot_ratings?select=id,comment&limit=1" \
            -H "apikey: ${SUPABASE_ANON_KEY}" \
            -H "Authorization: Bearer ${SUPABASE_ANON_KEY}" \
            -H "Accept-Profile: public" | jq .
